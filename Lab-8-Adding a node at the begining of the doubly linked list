#adding a node at the begining of the doubly linked list    
class Node:    
    def __init__(self,data):    
        self.data = data    
        self.previous = None    
        self.next = None        
class InsertStart:        
    def __init__(self):    
        self.head = None    
        self.tail = None    
    def addAtStart(self, data):     
        newNode = Node(data)   
        if(self.head == None):        
            self.head = self.tail = newNode    
            self.head.previous = None   
            self.tail.next = None    
        else:       
            self.head.previous = newNode    
            newNode.next = self.head    
            newNode.previous = None    
            self.head = newNode    
    def display(self):        
        current = self.head    
        if(self.head == None):    
            print("List is empty")   
            return    
        while(current != None):        
            print(current.data)  
            current = current.next        
        print()    
            
dList = InsertStart()    
dList.addAtStart(5)            
dList.addAtStart(4)            
dList.addAtStart(3)            
dList.addAtStart(2)            
dList.addAtStart(1)
print("doubly linked list: ")
dList.display()
n = int(input("enter the number that you want to add at the begining : "))
dList.addAtStart(n)
print("Adding a node to the start of the list: ")
dList.display()

Output :
doubly linked list: 
1
2
3
4
5

enter the number that you want to add at the begining : 6
Adding a node to the start of the list: 
6
1
2
3
4
5
